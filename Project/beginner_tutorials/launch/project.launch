<launch>
	<!-- RGB camera-->
	<group ns="camera">
		<node name="image_proc" pkg="image_proc" type="image_proc"/>
	</group>

	<node name="camera" pkg="avt_vimba_camera" type="mono_camera_node" output="screen">
		<param name="guid" value="50-0503343290"/>
		<param name="ip" value=""/>
		<param name="camera_info_url" value="file://$(find avt_vimba_camera)/calibrations/calibration_50-0503343290.yaml"/>
		<param name="frame_id" value="left_optical"/>
		<param name="trig_timestamp_topic" value=""/>
		<param name="show_debug_prints" value="true"/>

		<!-- Trigger mode:
			1. Freerun
			2. SyncIn1
			3. SyncIn2
			4. SyncIn3
			5. SyncIn4
			6. FixedRate
			7. Software
		-->
		<param name="trigger_source" value="FixedRate"/>

		<!-- Acquisition mode:
			1. Continuous
			2. SingleFrame
			3. MultiFrame
			4. Recorder
		-->
		<param name="acquisition_mode" value="Continuous"/>

		<!-- Acquisition rate in fps -->
		<param name="acquisition_rate" value="12"/>

		<!-- Pixel format:
			1. Mono8
			2. Mono12
			3. Mono12Packed
			4. BayerRG8
			5. BayerRG12Packed
			6. BayerGR12
			7. RGB8Packed
			8. BGR8Packed
		-->
		<param name="pixel_format" value="BayerRG8"/>
		<!-- Exposure in us -->
		<param name="exposure" value="1000"/>
		<!-- Gain in dB -->
		<param name="gain" value="0"/>

		<!-- Auto control
			1. Off
			2. Once
			3. Continuous
		-->
		<param name="exposure_auto" value="Continuous"/>
		<param name="gain_auto" value="Continuous"/>
		<param name="whitebalance_auto" value="Continuous"/>

		<param name="binning_x" value="1"/>
		<param name="binning_y" value="1"/>
		<param name="decimation_x" value="1"/>
		<param name="decimation_y" value="1"/>
		<param name="x_offset" value="8"/>
		<param name="y_offset" value="9"/>
		<param name="width" value="1920"/>
		<param name="height" value="1440"/>

		<param name="stream_bytes_per_second" value="45000000"/>
	</node>

	<!-- Turtlebot -->
  <arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [create, roomba]"/>
  <arg name="battery"           default="$(env TURTLEBOT_BATTERY)"      doc="kernel provided locatio for battery info, use /proc/acpi/battery/BAT0 in 2.6 or earlier kernels." />
  <arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
  <arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asux_xtion_pro]"/>
  <arg name="simulation"        default="$(env TURTLEBOT_SIMULATION)"   doc="set flags to indicate this turtle is run in simulation mode."/>
  <arg name="serialport"        default="$(env TURTLEBOT_SERIAL_PORT)"  doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>
  <arg name="robot_name"        default="$(env TURTLEBOT_NAME)"         doc="used as a unique identifier and occasionally to preconfigure root namespaces, gateway/zeroconf ids etc."/>
  <arg name="robot_type"        default="$(env TURTLEBOT_TYPE)"         doc="just in case you are considering a 'variant' and want to make use of this."/>

  <param name="/use_sim_time" value="$(arg simulation)"/>

  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="serialport" value="$(arg serialport)" />
  </include>
  <include file="$(find turtlebot_bringup)/launch/includes/netbook.launch.xml">
    <arg name="battery" value="$(arg battery)" />
  </include>

  <!-- Rapp Manager --> 
  <arg name="rapp_auto_installation"            default="false"  doc="automatically install rapps from the web (not typically used)"/> <!-- http://wiki.ros.org/rocon_app_manager/Tutorials/indigo/Automatic Rapp Installation -->
  <arg name="rapp_auto_start"                   default=""       doc="pick an app to autostart, e.g. 'rocon_apps/talker'"/>
  <arg name="rapp_package_whitelist"            default="$(env TURTLEBOT_RAPP_PACKAGE_WHITELIST)" doc="a list of catkin packages that provide rapps to be loaded by the app manager."/>
  <arg name="rapp_package_blacklist"            default="$(env TURTLEBOT_RAPP_PACKAGE_BLACKLIST)" doc="a list of catkin packages to blacklist from providing rapps."/>
  <arg name="rapp_preferred_configuration_file" default="$(find turtlebot_bringup)/param/preferred_rapp.yaml" doc="a configuration of preferred rapps"/>
  <arg name="robot_icon"                        default="turtlebot_bringup/turtlebot2.png"        doc="passed to user interfaces to socialise the turtlebot's appearance"/>
  <arg name="rapp_verbose"                      default="true"   doc="show verbose output from running apps (aka roslaunch --screen)"/>

  <!-- ***************************** Rocon Master Info ************************** -->
  <arg name="robot_description"                 default="Kick-ass ROS turtle"/>

  <!-- Capabilities --> 
  <arg name="capabilities"                      default="true" doc="start and register an underlying capability server"/>
  <arg name="capabilities_server_name"          default="capability_server"/>
  <arg name="capabilities_nodelet_manager_name" default="capability_server_nodelet_manager" />
  <arg name="capabilities_parameters"           default="$(find turtlebot_bringup)/param/capabilities/defaults_tb2.yaml"  doc="preload the capability server with this configurations" /> <!-- defaults_tb.yaml, defaults_tb2.yaml -->
  <arg name="capabilities_package_whitelist"    default="[kobuki_capabilities, std_capabilities, turtlebot_capabilities]" doc="register capabilities from these packages only" /> 
  <arg name="capabilities_blacklist"            default="['std_capabilities/Navigation2D', 'std_capabilities/MultiEchoLaserSensor']" doc="blacklist these specific capabilities from being registered" />

  <!-- Interactions --> 
  <arg name="interactions"      default="true"  doc="start an interactions manager"/>
  <arg name="interactions_list" default="$(env TURTLEBOT_INTERACTIONS_LIST)" doc="a list of filenames that provide interactions specifications."/>

  <!-- Zeroconf -->
  <arg name="zeroconf"                          default="true"              doc="publish the master information on zeroconf"/>
  <!--arg name="zeroconf_name"                     default="$(arg robot_name)" doc="the name to identify the master on zeroconf"/-->
  <arg name="zeroconf_port"                     default="11311"             doc="port number of the ros master"/>

  <!-- Rapp Manager -->
  <include file="$(find rocon_app_manager)/launch/standalone.launch">

    <!-- Rapp Manager --> 
    <arg name="robot_name"                        value="$(arg robot_name)" />
    <arg name="robot_type"                        value="$(arg robot_type)" />
    <arg name="robot_icon"                        value="$(arg robot_icon)" />
    <arg name="rapp_package_whitelist"            value="$(arg rapp_package_whitelist)" />
    <arg name="rapp_package_blacklist"            value="$(arg rapp_package_blacklist)" />
    <arg name="rapp_preferred_configuration_file" value="$(arg rapp_preferred_configuration_file)" />
    <arg name="auto_start_rapp"                   value="$(arg rapp_auto_start)" />
    <arg name="screen"                            value="$(arg rapp_verbose)" />
    <arg name="auto_rapp_installation"            value="$(arg rapp_auto_installation)" />

    <!-- Rocon Master Info -->
    <arg name="robot_description"                 value="$(arg robot_description)" />

    <!-- Capabilities --> 
    <arg name="capabilities"                      value="$(arg capabilities)" />
    <arg name="capabilities_blacklist"            value="$(arg capabilities_blacklist)" />
    <arg name="capabilities_nodelet_manager_name" value="$(arg capabilities_nodelet_manager_name)" />
    <arg name="capabilities_server_name"          value="$(arg capabilities_server_name)" />
    <arg name="capabilities_package_whitelist"    value="$(arg capabilities_package_whitelist)" />
    <arg name="capabilities_parameters"           value="$(arg capabilities_parameters)" />

    <!-- Interactions --> 
    <arg name="interactions"                      value="$(arg interactions)"/>
    <arg name="interactions_list"                 value="$(arg interactions_list)"/>

    <!-- Zeroconf --> 
    <arg name="zeroconf"                          value="$(arg zeroconf)"/>
    <!--arg name="zeroconf_name"                     value="$(arg zeroconf_name)"/-->
    <arg name="zeroconf_port"                     value="$(arg zeroconf_port)"/>

  </include>

	<!-- Asus-->
  <!-- 3D sensor -->
  <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- r200, kinect, asus_xtion_pro -->
<!-- WATANABE comment out below section -->
<!--
  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <arg name="rgb_processing" value="false" />
    <arg name="depth_registration" value="false" />
    <arg name="depth_processing" value="false" />
-->    
    <!-- We must specify an absolute topic name because if not it will be prefixed by "$(arg camera)".
         Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 --> 
<!--
    <arg name="scan_topic" value="/scan" />
  </include>
-->

  <!-- Gmapping -->
  <arg name="custom_gmapping_launch_file" default="$(find turtlebot_navigation)/launch/includes/gmapping/$(arg 3d_sensor)_gmapping.launch.xml"/>
  <include file="$(arg custom_gmapping_launch_file)"/>
  <!-- Move base -->
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>
	<!-- Our nodes-->
	
	<node name="turtlebot_move" pkg="beginner_tutorials" type="turtlebot_move" respawn="true" />
	<node name="asus_node" pkg="beginner_tutorials" type="asus_node" respawn="true" />
	<node name="thermal_node" pkg="beginner_tutorials" type="thermal_node" respawn="true" />
	<node name="rgb_cam_node" pkg="beginner_tutorials" type="rgb_cam_node" respawn="true" />

</launch>